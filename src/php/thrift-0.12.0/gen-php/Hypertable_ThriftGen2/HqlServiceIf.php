<?php
namespace Hypertable_ThriftGen2;

/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

/**
 * HQL service is a superset of Client service
 * 
 * It adds capability to execute HQL queries to the service
 */
interface HqlServiceIf extends \Hypertable_ThriftGen\ClientServiceIf
{
    /**
     * Execute an HQL command
     * 
     * @param ns - Namespace id
     * 
     * @param command - HQL command
     * 
     * @param noflush - Do not auto commit any modifications (return a mutator)
     * 
     * @param unbuffered - return a scanner instead of buffered results
     * 
     * @param int $ns
     * @param string $command
     * @param bool $noflush
     * @param bool $unbuffered
     * @return \Hypertable_ThriftGen2\HqlResult Result type of HQL queries
     * 
     * <dl>
     *   <dt>results</dt>
     *   <dd>String results from metadata queries</dd>
     * 
     *   <dt>cells</dt>
     *   <dd>Resulting table cells of for buffered queries</dd>
     * 
     *   <dt>scanner</dt>
     *   <dd>Resulting scanner ID for unbuffered queries</dd>
     * 
     *   <dt>mutator</dt>
     *   <dd>Resulting mutator ID for unflushed modifying queries</dd>
     * </dl>
     * 
     * @throws \Hypertable_ThriftGen\ClientException
     */
    public function hql_exec($ns, $command, $noflush, $unbuffered);
    /**
     * Convenience method for executing an buffered and flushed query
     * 
     * because thrift doesn't (and probably won't) support default argument values
     * 
     * @param ns - Namespace
     * 
     * @param command - HQL command
     * 
     * @param int $ns
     * @param string $command
     * @return \Hypertable_ThriftGen2\HqlResult Result type of HQL queries
     * 
     * <dl>
     *   <dt>results</dt>
     *   <dd>String results from metadata queries</dd>
     * 
     *   <dt>cells</dt>
     *   <dd>Resulting table cells of for buffered queries</dd>
     * 
     *   <dt>scanner</dt>
     *   <dd>Resulting scanner ID for unbuffered queries</dd>
     * 
     *   <dt>mutator</dt>
     *   <dd>Resulting mutator ID for unflushed modifying queries</dd>
     * </dl>
     * 
     * @throws \Hypertable_ThriftGen\ClientException
     */
    public function hql_query($ns, $command);
    /**
     * @see hql_exec
     * 
     * @param int $ns
     * @param string $command
     * @param bool $noflush
     * @param bool $unbuffered
     * @return \Hypertable_ThriftGen2\HqlResultAsArrays Same as HqlResult except with cell as array
     * 
     * @throws \Hypertable_ThriftGen\ClientException
     */
    public function hql_exec_as_arrays($ns, $command, $noflush, $unbuffered);
    /**
     * @param int $ns
     * @param string $command
     * @param bool $noflush
     * @param bool $unbuffered
     * @return \Hypertable_ThriftGen2\HqlResult2 Same as HqlResult except with cell as array
     * 
     * @throws \Hypertable_ThriftGen\ClientException
     */
    public function hql_exec2($ns, $command, $noflush, $unbuffered);
    /**
     * @see hql_query
     * 
     * @param int $ns
     * @param string $command
     * @return \Hypertable_ThriftGen2\HqlResultAsArrays Same as HqlResult except with cell as array
     * 
     * @throws \Hypertable_ThriftGen\ClientException
     */
    public function hql_query_as_arrays($ns, $command);
    /**
     * @param int $ns
     * @param string $command
     * @return \Hypertable_ThriftGen2\HqlResult2 Same as HqlResult except with cell as array
     * 
     * @throws \Hypertable_ThriftGen\ClientException
     */
    public function hql_query2($ns, $command);
}
